% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ingest.R
\name{ingest}
\alias{ingest}
\alias{pipeline_create}
\alias{pipeline_get}
\alias{pipeline_delete}
\alias{pipeline_simulate}
\title{Ingest API operations}
\usage{
pipeline_create(conn, id, body, ...)

pipeline_get(conn, id, filter_path = NULL, ...)

pipeline_delete(conn, id, body, ...)

pipeline_simulate(conn, body, id = NULL, ...)
}
\arguments{
\item{conn}{an Elasticsearch connection object, see \link{Elasticsearch}}

\item{id}{(character) one or more pipeline id's. with delete, you can use
a wildcard match}

\item{body}{body describing pipeline, see examples and Elasticsearch docs}

\item{...}{Curl args passed on to \link[crul:verb-POST]{crul::verb-POST}, \link[crul:verb-GET]{crul::verb-GET},
\link[crul:verb-PUT]{crul::verb-PUT}, or \link[crul:verb-DELETE]{crul::verb-DELETE}}

\item{filter_path}{(character) fields to return. deafults to all if not given}
}
\value{
a named list
}
\description{
Ingest API operations
}
\details{
ingest/pipeline functions available in Elasticsearch v5 and greater
}
\examples{
\dontrun{
# connection setup
(x <- connect())

# create
body1 <- '{
  "description" : "do a thing",
  "version" : 123,
  "processors" : [
    {
      "set" : {
        "field": "foo",
        "value": "bar"
      }
    }
  ]
}'
body2 <- '{
  "description" : "do another thing",
  "processors" : [
    {
      "set" : {
        "field": "stuff",
        "value": "things"
      }
    }
  ]
}'
pipeline_create(x, id = 'foo', body = body1)
pipeline_create(x, id = 'bar', body = body2)

# get
pipeline_get(x, id = 'foo')
pipeline_get(x, id = 'bar')
pipeline_get(x, id = 'foo', filter_path = "*.version")
pipeline_get(x, id = c('foo', 'bar')) # get >1

# delete
pipeline_delete(x, id = 'foo')

# simulate
## with pipeline included
body <- '{
  "pipeline" : {
    "description" : "do another thing",
    "processors" : [
      {
        "set" : {
          "field": "stuff",
          "value": "things"
        }
      }
    ]
  },
  "docs" : [
    { "_source": {"foo": "bar"} },
    { "_source": {"foo": "world"} }
  ]
}'
pipeline_simulate(x, body)

## referencing existing pipeline
body <- '{
  "docs" : [
    { "_source": {"foo": "bar"} },
    { "_source": {"foo": "world"} }
  ]
}'
pipeline_simulate(x, body, id = "foo")
}
}
\references{
\url{https://www.elastic.co/guide/en/elasticsearch/reference/current/ingest-apis.html}
}
